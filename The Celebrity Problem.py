# -*- coding: utf-8 -*-
"""The Celebrity Problem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y9tOSAIZe5NPkhKOumPXrVtSmgmxKZlQ
"""

# A celebrity is a person who is known to all but does not know anyone at a party. If you go to a party of N people, find if there is a celebrity in the party or not.
# A square NxN matrix M[][] is used to represent people at the party such that if an element of row i and column j  is set to 1 it means ith person knows jth person. 
# Here M[i][i] will always be 0.
# Note: Following 0 based indexing.

N = 4
M = [[0,1,1,0],
     [0,0,0,0],
     [0,1,0,0],
     [0,1,1,0]]
for i in range(len(M)):
  for j in range(len(M[i])):
    print(M[i][j], end=" ")
  print()

Dict = {}
for i in range(len(M)):
  for j in range(len(M[i])):
    # everyone knows itself, so i and j should not be equal
    if (i != j):
      # i should know j, but j should not know i
      if (M[i][j] == 1 and M[j][i] != 1):
        if j in Dict.keys():
          # Incrementing counter of people knowing j
          Dict[j] = Dict[j]+1
        else:
          Dict[j] = 1

max_value = 0
if Dict:
  # finding max value for a person
  max_value = max(Dict.values())
print(max_value)
print(Dict)
if (max_value == len(M)-1):
  # index of person, who is known by all people in party
  max_key = max(Dict, key=Dict.get)
  print(max_key, "is Celebrity")
else:
  print(-1)
